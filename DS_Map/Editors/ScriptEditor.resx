<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="checkBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABQAAAAUCAYAAACNiR0NAAAAIGNIUk0AAHomAACAhAAA+gAAAIDoAAB1
        MAAA6mAAADqYAAAXcJy6UTwAAAAJcEhZcwAACxAAAAsQAa0jvXUAAAAHdElNRQfpChoPICwki0DMAAAD
        7UlEQVQ4T43Q3UtbdxzH8U+RKFg3aHFMkOHJg8dSb/sX9K6UXvSm/4JlajIfYp41xsTOVo0thdKNGbdZ
        jabmyac86HBbQVZMcmJOoKMXK9IiPrTknJNdpCX9jpO0aSxe7AMvfufm9+bHAf7PLBuAZROwbgC2zXpY
        NvUNt3deKX3H0bbVf6+zy9J5dlkCG5Y+v3nKzHHAGC2f1s0GWDf1MMf36+x/EuM9fN+2kn/JhqVZNixd
        ZUPSOeD+3ydVzxgDTLFyzBxvhDnuhGVDgClOtUN/EDN/QG3LeWLDkuyIDUleYCoL3M2WTzdfJs8QBQyx
        8utMsSaY4/dgjudhjhOMUaq1bVHL3AGxoTy1BqWPinKoBnezLKayKkzunikFbVvAQAQwyqIqGGMemGIF
        mGJUYohQrXWLWmYPiA3mqTUgVcjBG5jKPsFUdgvu7DW4eQXGUkB3CDBELsAQeQxD5K0cqRhYL9TZfueU
        86+PW/15avVLFYA7+wLuLH2wh0m+D3fSjehduQT9egQDkSIG5EjFG+jXJr66/+yKZkniNUsSVQMmeTcm
        +GNM8PSBgDHOh/7INnpXi+hfI+grnkO/3oGO+bOtS/mLGp/Ia3wiVQPG+S8xntFiPLOP8QyV3MkQRp4S
        9DHCdyuEvpV36F+NoX/tMvQrNU0P/4F6UWzXLIq8ZlGkj9SL5SDgflaHsd2bGEsf4naGKlxJgvG3AnpW
        Z9CzrIJxE+hfhXpBlLWrF0RevSBSNUAXArT+OmjDN6GPH2JkhzC2+8mtdAGj3Ay+z6gwkgJcaai9oqxd
        7RV5tVekaoAu/AV0YS104X10Bwk9EYL9qRyq9g630jGMpi/DxdV8/eM+VHNiu2pO5FVzIlUDtEE3dKFj
        6EIEbYjQGRDQG/XBxW1jNF3EaJoqXOnncHIdsGyfVc+JF1WPBF71SKBqQHfwRellZXvoDvbh26VGuLhL
        cHIROLkinBxVjHBv4EhNNN7fu6KcFXjlrEDVgK7ADXQFnqArsIWuwDV0BRXQLpf+FUa4C3Bwj+Hg3sLB
        UcVwqlDn5Llvpl8fK38VqJocrEGnn0WnX4VO/xl0BwHbX3KszJFSYTjlgT1VgD1FJUNJUth3qfmHI1L+
        IpLyZ6FCDgKd/jL5WybPkQKGU+XTnmyCPXkP9mRejmEwQYqhNDU/PCLljEDMJ0Wgw3dS9eSgvRQEhpKN
        GEw6MZgQYE2Qwpam5geHxHgEYjw52RHjyXlPBk7bUBIYLgUB204DbAk9LDv7CisnB98zHuElM52bZaZz
        VxlP7tzn10/fYBIYTAG2BGBN1MO0o68fzr5qfnAUZaaF6y0/5c63TOfAeHL4D63qzy0aV5HzAAAAAElF
        TkSuQmCC
</value>
  </data>
</root>